package com.langlang.utils;

public class Filter {
	private int[] data ;
	private int total;
	private int curr;

	/***
	private static int[] B = {-1,   -1,    0,    0,   -1,   -1,   -1,    0,    0,   -1,   -1,   -1,
	      0,    0,   -1,   -1,   -1,    0,    0,   -1,   -2,   -1,    0,    0,
	     -1,   -2,   -1,    0,    0,   -1,   -2,   -1,    0,    1,   -1,   -2,
	     -1,    1,    1,   -1,   -2,   -1,    1,    1,   -1,   -3,   -1,    1,
	      1,   -1,   -3,   -1,    1,    1,   -1,   -3,   -2,    1,    1,   -1,
	     -3,   -2,    1,    1,   -2,   -3,   -2,    1,    1,   -2,   -3,   -2,
	      1,    1,   -2,   -3,   -2,    1,    1,   -2,  125,   -2,    1,    1,
	     -2,   -3,   -2,    1,    1,   -2,   -3,   -2,    1,    1,   -2,   -3,
	     -2,    1,    1,   -2,   -3,   -1,    1,    1,   -2,   -3,   -1,    1,
	      1,   -1,   -3,   -1,    1,    1,   -1,   -3,   -1,    1,    1,   -1,
	     -2,   -1,    1,    1,   -1,   -2,   -1,    1,    0,   -1,   -2,   -1,
	      0,    0,   -1,   -2,   -1,    0,    0,   -1,   -2,   -1,    0,    0,
	     -1,   -1,   -1,    0,    0,   -1,   -1,   -1,    0,    0,   -1,   -1,
	     -1,    0,    0,   -1,   -1
	};
	***/
	
	/***
	private static int[] B = {
	      1,    1,   -1,    0,    0,    1,    0,    0,   -1,    0,    0,    0,
	     -1,    0,    0,    0,    0,    0,    0,    0,   -1,   -1,    0,    0,
	      0,   -1,    0,    0,    0,   -1,   -1,   -2,    1,    0,   -1,   -3,
	     -1,    0,    1,   -2,   -2,   -2,    1,    0,   -1,   -4,   -1,    1,
	      1,   -2,   -4,   -2,    1,    2,   -3,   -3,   -3,    2,    0,   -1,
	     -6,    0,   -1,    4,   -5,   -2,   -5,    4,   -2,    1,   -9,    1,
	     -2,    5,   -7,   -1,   -7,    6,   -3,    2,  119,    2,   -3,    6,
	     -7,   -1,   -7,    5,   -2,    1,   -9,    1,   -2,    4,   -5,   -2,
	     -5,    4,   -1,    0,   -6,   -1,    0,    2,   -3,   -3,   -3,    2,
	      1,   -2,   -4,   -2,    1,    1,   -1,   -4,   -1,    0,    1,   -2,
	     -2,   -2,    1,    0,   -1,   -3,   -1,    0,    1,   -2,   -1,   -1,
	      0,    0,    0,   -1,    0,    0,    0,   -1,   -1,    0,    0,    0,
	      0,    0,    0,    0,   -1,    0,    0,    0,   -1,    0,    0,    1,
	      0,    0,   -1,    1,    1
	};
	***/

//	private static int[] B = {
//		 -2,   -1,    0,    0,   -1,   -2,   -1,    0,    0,   -1,   -2,   -1,
//	      1,    0,   -1,   -3,    0,    0,    1,   -2,   -1,   -2,    1,    0,
//	     -1,   -2,   -1,    1,    0,    0,   -3,    0,   -1,    2,   -3,   -1,
//	     -3,    2,    0,    0,   -3,   -1,    1,    0,    0,   -4,    0,   -1,
//	      3,   -3,    0,   -4,    3,   -1,    1,   -4,    0,    0,    1,   -1,
//	     -3,    0,   -1,    3,   -4,    0,   -5,    5,   -3,    3,   -7,    3,
//	     -4,    6,   -7,    2,   -7,    6,   -4,    4,  120,    4,   -4,    6,
//	     -7,    2,   -7,    6,   -4,    3,   -7,    3,   -3,    5,   -5,    0,
//	     -4,    3,   -1,    0,   -3,   -1,    1,    0,    0,   -4,    1,   -1,
//	      3,   -4,    0,   -3,    3,   -1,    0,   -4,    0,    0,    1,   -1,
//	     -3,    0,    0,    2,   -3,   -1,   -3,    2,   -1,    0,   -3,    0,
//	      0,    1,   -1,   -2,   -1,    0,    1,   -2,   -1,   -2,    1,    0,
//	      0,   -3,   -1,    0,    1,   -1,   -2,   -1,    0,    0,   -1,   -2,
//	     -1,    0,    0,   -1,   -2
//	};
		
	/***
	private static int[] B = {1,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0,   0,   0,    0,    0,   0,   0,   0,
		0,   0,    0,    0,   0
	};
	***/
	
//	private static int[] B = {
//	-217,   -407,    178,     51,    -69,   -452,   -251,     76,    139,
//    -111,   -492,   -203,     -2,    282,   -287,   -323,   -427,    253,
//      40,    -34,   -619,   -161,      2,    309,   -288,   -420,   -363,
//     184,    187,   -205,   -495,   -356,    234,    115,    -87,   -693,
//    -134,    -23,    438,   -454,   -319,   -561,    443,    -28,     24,
//    -832,    -66,    -35,    452,   -436,   -430,   -440,    299,    196,
//    -253,   -558,   -410,    373,     35,     10,   -952,     94,   -243,
//     788,   -877,     47,  -1041,   1032,   -606,    635,  -1599,    719,
//    -829,   1365,  -1440,    553,  -1511,   1478,   -998,    962,  30876,
//     962,   -998,   1478,  -1511,    553,  -1440,   1365,   -829,    719,
//   -1599,    635,   -606,   1032,  -1041,     47,   -877,    788,   -243,
//      94,   -952,     10,     35,    373,   -410,   -558,   -253,    196,
//     299,   -440,   -430,   -436,    452,    -35,    -66,   -832,     24,
//     -28,    443,   -561,   -319,   -454,    438,    -23,   -134,   -693,
//     -87,    115,    234,   -356,   -495,   -205,    187,    184,   -363,
//    -420,   -288,    309,      2,   -161,   -619,    -34,     40,    253,
//    -427,   -323,   -287,    282,     -2,   -203,   -492,   -111,    139,
//      76,   -251,   -452,    -69,     51,    178,   -407,   -217
//	};
	
//	// For hand
//	private static int[] B = {
//		 12,   -112,   -338,   -500,   -449,   -230,    -65,   -138,   -385,
//	     -550,   -453,   -196,    -66,   -221,   -503,   -602,   -402,   -125,
//	      -92,   -357,   -633,   -606,   -300,    -62,   -178,   -534,   -732,
//	     -537,   -164,    -46,   -339,   -724,   -758,   -388,    -33,   -117,
//	     -568,   -879,   -679,   -180,     40,   -300,   -834,   -944,   -477,
//	       45,      0,   -599,  -1079,   -863,   -162,    217,   -206,   -991,
//	    -1227,   -587,    231,    254,   -623,  -1428,  -1181,    -72,    643,
//	       42,  -1306,  -1845,   -798,    777,   1006,   -638,  -2450,  -2171,
//	      342,   2446,   1255,  -2874,  -5654,  -2351,   7449,  18406,  23188,
//	    18406,   7449,  -2351,  -5654,  -2874,   1255,   2446,    342,  -2171,
//	    -2450,   -638,   1006,    777,   -798,  -1845,  -1306,     42,    643,
//	      -72,  -1181,  -1428,   -623,    254,    231,   -587,  -1227,   -991,
//	     -206,    217,   -162,   -863,  -1079,   -599,      0,     45,   -477,
//	     -944,   -834,   -300,     40,   -180,   -679,   -879,   -568,   -117,
//	      -33,   -388,   -758,   -724,   -339,    -46,   -164,   -537,   -732,
//	     -534,   -178,    -62,   -300,   -606,   -633,   -357,    -92,   -125,
//	     -402,   -602,   -503,   -221,    -66,   -196,   -453,   -550,   -385,
//	     -138,    -65,   -230,   -449,   -500,   -338,   -112,     12
//	};

	private static int[] B = {
//		 -7,     70,     61,     -6,     76,    116,     19,     78,    157,
//	       48,     75,    187,     77,     66,    206,    104,     52,    213,
//	      129,     32,    207,    149,      7,    187,    165,    -23,    152,
//	      174,    -57,    103,    177,    -92,     39,    172,   -128,    -39,
//	      157,   -163,   -129,    133,   -195,   -231,     99,   -221,   -342,
//	       54,   -240,   -459,     -4,   -248,   -581,    -74,   -245,   -704,
//	     -159,   -225,   -825,   -259,   -186,   -941,   -379,   -121,  -1049,
//	     -524,    -22,  -1146,   -706,    128,  -1230,   -952,    367,  -1297,
//	    -1329,    793,  -1347,  -2076,   1808,  -1377,  -4851,   8638,  20458,
//	     8638,  -4851,  -1377,   1808,  -2076,  -1347,    793,  -1329,  -1297,
//	      367,   -952,  -1230,    128,   -706,  -1146,    -22,   -524,  -1049,
//	     -121,   -379,   -941,   -186,   -259,   -825,   -225,   -159,   -704,
//	     -245,    -74,   -581,   -248,     -4,   -459,   -240,     54,   -342,
//	     -221,     99,   -231,   -195,    133,   -129,   -163,    157,    -39,
//	     -128,    172,     39,    -92,    177,    103,    -57,    174,    152,
//	      -23,    165,    187,      7,    149,    207,     32,    129,    213,
//	       52,    104,    206,     66,     77,    187,     75,     48,    157,
//	       78,     19,    116,     76,     -6,     61,     70,     -7

		  96,     78,     -7,     35,    197,    229,     86,     50,    231,
	      331,    175,     66,    240,    401,    251,     71,    220,    440,
	      309,     59,    168,    443,    347,     29,     81,    408,    363,
	      -20,    -41,    332,    355,    -83,   -197,    214,    324,   -159,
	     -383,     53,    271,   -242,   -594,   -148,    199,   -323,   -824,
	     -389,    112,   -393,  -1065,   -666,     14,   -440,  -1308,   -981,
	      -89,   -447,  -1544,  -1337,   -192,   -393,  -1763,  -1748,   -288,
	     -239,  -1956,  -2249,   -373,     89,  -2116,  -2945,   -441,    788,
	    -2236,  -4194,   -489,   2664,  -2310,  -8302,   -514,  19414,  30434,
	    19414,   -514,  -8302,  -2310,   2664,   -489,  -4194,  -2236,    788,
	     -441,  -2945,  -2116,     89,   -373,  -2249,  -1956,   -239,   -288,
	    -1748,  -1763,   -393,   -192,  -1337,  -1544,   -447,    -89,   -981,
	    -1308,   -440,     14,   -666,  -1065,   -393,    112,   -389,   -824,
	     -323,    199,   -148,   -594,   -242,    271,     53,   -383,   -159,
	      324,    214,   -197,    -83,    355,    332,    -41,    -20,    363,
	      408,     81,     29,    347,    443,    168,     59,    309,    440,
	      220,     71,    251,    401,    240,     66,    175,    331,    231,
	       50,     86,    229,    197,     35,     -7,     78,     96
  	};

	
//	// For hand
//	private static int[] B = {
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0, 0, 0, 0,
//		  0, 0, 0, 0, 0, 0,
//		  
//	      0,    0,   0,
//	      0,    0,   0,   0,   0,   0,   1,   1,   1,
//	      1,    1,   1,   1,   1,   1,   1,   1
//	};
			
	public Filter() {
		data = new int[1024];
		curr = 0;
		total = 0;
	}
			
	public synchronized void reset() {
		curr = 0;
		total = 0;
	}
	
	public boolean canGetOne() {
		return (total > 160);
	}
	
	public synchronized void addData(int value) throws Exception {
		if (total > 1024) {
			throw new Exception("Filter error, too much data.");
		}
		
		data[curr] = value;
		curr++;
		
		total++;
	}
	
	public synchronized int getOne() throws Exception {
		if (total <= 160) {
			throw new Exception("Filter error, no data available.");
		}
		
		int sum;
		sum = 0;
		for (int i = 0; i < 161; i++) {
			//<sum += (data[i] * B[i]);
			sum += (data[160 - i] * B[i]);
		}
		
		for (int i = 0; i < total - 1; i++) {
			data[i] = data[i + 1];
		}
		
		curr--;
		total--;
		
		return sum;
	}
}
